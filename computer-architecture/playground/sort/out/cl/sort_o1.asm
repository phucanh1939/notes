; Listing generated by Microsoft (R) Optimizing Compiler Version 19.41.34123.0 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	insert_value
PUBLIC	insertion_sort
PUBLIC	main
PUBLIC	__xmm@00000002000000050000000400000007
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__security_cookie:QWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$insertion_sort DD imagerel $LN11
	DD	imagerel $LN11+82
	DD	imagerel $unwind$insertion_sort
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main DD	imagerel $LN4
	DD	imagerel $LN4+76
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT __xmm@00000002000000050000000400000007
CONST	SEGMENT
__xmm@00000002000000050000000400000007 DB 07H, 00H, 00H, 00H, 04H, 00H, 00H
	DB	00H, 05H, 00H, 00H, 00H, 02H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main DD	011319H
	DD	08204H
	DD	imagerel __GSHandlerCheck
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$insertion_sort DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
; Function compile flags: /Ogspy
;	COMDAT main
_TEXT	SEGMENT
arr$ = 32
__$ArrayPad$ = 56
main	PROC						; COMDAT
; File D:\personal-space\notes\computer-architecture\playground\sort\src\sort.c
; Line 21
$LN4:
	sub	rsp, 72					; 00000048H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 22
	movdqa	xmm0, XMMWORD PTR __xmm@00000002000000050000000400000007
; Line 24
	lea	rcx, QWORD PTR arr$[rsp]
	mov	edx, 5
	mov	DWORD PTR arr$[rsp+16], 6
	movdqu	XMMWORD PTR arr$[rsp], xmm0
	call	insertion_sort
; Line 25
	xor	eax, eax
; Line 26
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 72					; 00000048H
	ret	0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogspy
;	COMDAT insertion_sort
_TEXT	SEGMENT
arr$ = 48
length$ = 56
insertion_sort PROC					; COMDAT
; File D:\personal-space\notes\computer-architecture\playground\sort\src\sort.c
; Line 14
$LN11:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 15
	mov	ebx, 1
	mov	ebp, edx
	mov	rsi, rcx
	cmp	edx, ebx
	jle	SHORT $LN3@insertion_
	lea	rdi, QWORD PTR [rcx+4]
$LL4@insertion_:
; Line 17
	mov	r8d, DWORD PTR [rdi]
	mov	edx, ebx
	mov	rcx, rsi
	call	insert_value
	inc	ebx
	lea	rdi, QWORD PTR [rdi+4]
	cmp	ebx, ebp
	jl	SHORT $LL4@insertion_
$LN3@insertion_:
; Line 19
	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
insertion_sort ENDP
_TEXT	ENDS
; Function compile flags: /Ogspy
;	COMDAT insert_value
_TEXT	SEGMENT
arr$ = 8
n$ = 16
value$ = 24
insert_value PROC					; COMDAT
; File D:\personal-space\notes\computer-architecture\playground\sort\src\sort.c
; Line 5
	sub	edx, 1
; Line 6
	js	SHORT $LN3@insert_val
	movsxd	rax, edx
	lea	r9, QWORD PTR [rcx+rax*4]
$LL2@insert_val:
	mov	eax, DWORD PTR [r9]
	cmp	eax, r8d
	jle	SHORT $LN3@insert_val
; Line 7
	mov	DWORD PTR [r9+4], eax
; Line 8
	sub	r9, 4
	sub	edx, 1
	jns	SHORT $LL2@insert_val
$LN3@insert_val:
; Line 10
	movsxd	rax, edx
	mov	DWORD PTR [rcx+rax*4+4], r8d
; Line 11
	ret	0
insert_value ENDP
_TEXT	ENDS
END
