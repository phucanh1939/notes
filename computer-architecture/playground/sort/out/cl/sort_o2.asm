; Listing generated by Microsoft (R) Optimizing Compiler Version 19.41.34123.0 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	insert_value
PUBLIC	insertion_sort
PUBLIC	main
;	COMDAT pdata
pdata	SEGMENT
$pdata$insertion_sort DD imagerel $LN23
	DD	imagerel $LN23+92
	DD	imagerel $unwind$insertion_sort
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$insertion_sort DD 020501H
	DD	013405H
xdata	ENDS
; Function compile flags: /Ogtpy
;	COMDAT main
_TEXT	SEGMENT
main	PROC						; COMDAT
; File D:\personal-space\notes\computer-architecture\playground\sort\src\sort.c
; Line 25
	xor	eax, eax
; Line 26
	ret	0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT insertion_sort
_TEXT	SEGMENT
arr$ = 8
length$ = 16
insertion_sort PROC					; COMDAT
; File D:\personal-space\notes\computer-architecture\playground\sort\src\sort.c
; Line 14
$LN23:
	mov	QWORD PTR [rsp+8], rbx
; Line 15
	movsxd	rbx, edx
	mov	r8, rcx
	cmp	rbx, 1
	jle	SHORT $LN3@insertion_
	mov	r9d, 1
	xor	r11d, r11d
	npad	6
$LL4@insertion_:
; Line 16
	mov	r10d, DWORD PTR [r8+r9*4]
; Line 5
	mov	edx, r11d
	lea	rax, QWORD PTR [r9-1]
; Line 6
	test	r11d, r11d
	js	SHORT $LN18@insertion_
$LL7@insertion_:
	mov	ecx, DWORD PTR [r8+rax*4]
	cmp	ecx, r10d
	jle	SHORT $LN18@insertion_
; Line 7
	mov	DWORD PTR [r8+rax*4+4], ecx
; Line 8
	dec	rax
	sub	edx, 1
	jns	SHORT $LL7@insertion_
$LN18@insertion_:
; Line 15
	inc	r11d
; Line 10
	mov	DWORD PTR [r8+rax*4+4], r10d
; Line 15
	inc	r9
	cmp	r9, rbx
	jl	SHORT $LL4@insertion_
$LN3@insertion_:
; Line 19
	mov	rbx, QWORD PTR [rsp+8]
	ret	0
insertion_sort ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT insert_value
_TEXT	SEGMENT
arr$ = 8
n$ = 16
value$ = 24
insert_value PROC					; COMDAT
; File D:\personal-space\notes\computer-architecture\playground\sort\src\sort.c
; Line 5
	lea	eax, DWORD PTR [rdx-1]
	mov	r10, rcx
; Line 6
	test	eax, eax
	js	SHORT $LN9@insert_val
	movsxd	rdx, eax
	lea	r9, QWORD PTR [rcx+rdx*4]
$LL2@insert_val:
	mov	edx, DWORD PTR [r9]
	cmp	edx, r8d
	jle	SHORT $LN9@insert_val
; Line 7
	mov	DWORD PTR [r9+4], edx
; Line 8
	sub	r9, 4
	sub	eax, 1
	jns	SHORT $LL2@insert_val
$LN9@insert_val:
; Line 11
	movsxd	rcx, eax
	mov	DWORD PTR [r10+rcx*4+4], r8d
	ret	0
insert_value ENDP
_TEXT	ENDS
END
